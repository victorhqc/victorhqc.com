name: Prepare Release

on:
    workflow_dispatch:
        inputs:
            version:
                description: "Version number (without v prefix)"
                required: true

jobs:
    prepare-release:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        steps:
            - uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Create release branch
              run: |
                  git checkout -b release/v${{ github.event.inputs.version }}

            - name: Update versions
              run: |
                  # Update version in each Cargo.toml
                  sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" api/Cargo.toml
                  sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" core/Cargo.toml
                  sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" cli/Cargo.toml
                  sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" web/Cargo.toml

            - name: Commit and tag
              run: |
                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"
                  git commit -am "chore: release v${{ github.event.inputs.version }}"
                  git tag "v${{ github.event.inputs.version }}"
                  git push && git push --tags

            - name: Create Pull Request
              uses: peter-evans/create-pull-request@v7
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  title: "Release v${{ github.event.inputs.version }}"
                  body: "Preparing release v${{ github.event.inputs.version }}"
                  branch: release/v${{ github.event.inputs.version }}
                  base: main

            - name: Create tag
              run: |
                  git tag "v${{ github.event.inputs.version }}"
                  git push origin "v${{ github.event.inputs.version }}"
