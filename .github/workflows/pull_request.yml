name: Pull Request

on:
    push:
        branches:
            - main
    pull_request:

jobs:
    rust_check:
        name: Rust Check
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-latest ]
                rust: [ stable ]
        steps:
            -   uses: actions/checkout@v3

            -   name: Install latest stable
                uses: actions-rs/toolchain@v1
                with:
                    toolchain: stable
                    override: true
                    components: rustfmt, clippy

            -   uses: Swatinem/rust-cache@v2
                with:
                    workspaces: |
                        api

            -   name: Generate Cargo.lock
                uses: actions-rs/cargo@v1
                with:
                    command: generate-lockfile

#            -   name: Install SQLX
#                run: |
#                    cargo install sqlx-cli --no-default-features --features sqlite
            - name: Install SQLX
              uses: taiki-e/cache-cargo-install-action@v2
              with:
                tool: sqlx-cli

            -   name: Init DB
                run: |
                    cd api
                    sqlx db setup
                env:
                    DATABASE_URL: sqlite://github.sqlite

            -   name: Run cargo check
                run: |
                     echo "CURRENT PATH"
                     pwd
                     echo "DIR"
                     ls -la
                     echo "CHECK"
                     cargo check
                working-directory: api
                env:
                    DATABASE_URL: sqlite://github.sqlite
                    ROCKET_DATABASE_URL: sqlite://github.sqlite

            -   name: Run cargo fmt
                run: cargo fmt --all --check
                working-directory: api
                env:
                    DATABASE_URL: sqlite://github.sqlite
                    ROCKET_DATABASE_URL: sqlite://github.sqlite

            -   name: Run cargo clippy
                run: cargo clippy -- -D warnings
                working-directory: api
                env:
                    DATABASE_URL: sqlite://github.sqlite
                    ROCKET_DATABASE_URL: sqlite://github.sqlite
