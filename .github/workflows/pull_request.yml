name: Pull Request

on:
    push:
        branches:
            - main
    pull_request:

env:
    DATABASE_URL: sqlite:/home/runner/work/victorhqc.com/victorhqc.com/github.sqlite
    ROCKET_DATABASE_URL: sqlite://github.sqlite
    CARGO_TERM_COLOR: always
    RUSTC_WRAPPER: sccache
    SCCACHE_CACHE_SIZE: 2G

jobs:
    rust_check:
        name: Rust Check
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                rust: [stable]
        steps:
            - uses: actions/checkout@v3

            - name: Install latest stable
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true
                  components: rustfmt, clippy
                  profile: minimal
                  target: x86_64-unknown-linux-musl

            - name: Cache dependencies
              uses: Swatinem/rust-cache@v2

            - name: Configure sccache
              run: |
                  echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
                  echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
                  echo “RUSTFLAGS=’--cfg profile=ephemeral-build’” >> $GITHUB_ENV

            - name: Run sccache-cache
              uses: mozilla-actions/sccache-action@v0.0.7
              with:
                  version: "v0.7.4"

            - uses: Swatinem/rust-cache@v2
              with:
                  workspaces: |
                      api
                      web
                      core
                      cli
                  cache-on-failure: true
                  shared-key: "rust-cache"

            - name: Install SQLX
              run: |
                  cargo install sqlx-cli --no-default-features --features sqlite

            - name: Check and Lint
              run: |
                  cargo fmt --all --check
                  cargo clippy --all-targets --all-features -- -D warnings
                  cargo check --all-targets --all-features

            - name: Build and Test
              run: |
                  cargo test --no-run --all-features
                  cargo test --all-features
